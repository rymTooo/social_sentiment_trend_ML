services:
  # zookeeper:
  #   image: 'confluentinc/cp-zookeeper:latest'
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"
  #   networks:
  #     - minio_network

  # kafka:
  #   container_name: kafka_test
  #   image: 'confluentinc/cp-kafka:latest'
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   volumes:
  #     - ./entrypoint.sh:/usr/bin/entrypoint.sh
  #   entrypoint: ["bash", "/usr/bin/entrypoint.sh"]
  #   ports:
  #     - "9092:9092"
  #     - "29092:29092"
  #   networks:
  #     - minio_network

  spark-master:
    build:
      context: ..
      dockerfile: ./deploy_spark/dockerfile.spark
    image: spark-master
    container_name: "spark-master"
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_IP=spark-master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./src:/src
      - ./data:/data
      - ./output:/output
      - D:/Kafka_spark/app:/opt/spark-job
    networks:
      - minio_network

networks:
  minio_network:
    external: true

volumes:
  spark_volume: